name: Node.js Build & Docker Image Build

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    name: Build Node.js

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install Dependencies and Build
        run: |
          npm ci
          npm run build --if-present


  test_nodejs:
    runs-on: ubuntu-latest
    name: Test Node.js
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Run Tests
        run: npm test

  build_and_push_docker_image:
    runs-on: ubuntu-latest
    name: Build & Push Docker Image
    needs: test_nodejs

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag stanthikun802/clcm3404-lab-4:latest

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Push Docker image to Docker Hub
        run: |
          docker push stanthikun802/clcm3404-lab-4:latest
  deploy:
    name: Deploy to EC2 on master branch push
    runs-on: ubuntu-latest
    needs: build_and_push_docker_image

    steps:
      - name: Checkout the files
        uses: actions/checkout@v2

      - name: Deploy to Server 1
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          REMOTE_HOST: ${{ secrets.HOST_DNS }}
          REMOTE_USER: ${{ secrets.USERNAME }}
          TARGET: ${{ secrets.TARGET_DIR }}

      - name: Executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DNS }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker pull stanthikun802/clcm3404-lab-4:latest
            docker stop clcm3404-lab-4 && docker rm clcm3404-lab-4
            docker run -d -p 3000:3000 --name clcm3404-lab-4 stanthikun802/clcm3404-lab-4:latest
            docker rmi stanthikun802/clcm3404-lab-4:latest